<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>插入排序 on 青龙偃月的博客</title>
    <link>http://blog.yuanqinglong.cn/tags/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/</link>
    <description>Recent content in 插入排序 on 青龙偃月的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 07 May 2018 22:18:31 +0800</lastBuildDate>
    
	<atom:link href="http://blog.yuanqinglong.cn/tags/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>算法基础———插入排序 </title>
      <link>http://blog.yuanqinglong.cn/post/2018/05/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Mon, 07 May 2018 22:18:31 +0800</pubDate>
      
      <guid>http://blog.yuanqinglong.cn/post/2018/05/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/</guid>
      <description>概念  在归并排序中，我们是用一种被称为分治法的通用模式，在分治法中，我们即将原问题分解为类似原问题的子问题，并递归的求解这些子问题，然后再归并这些子问题的解。  复杂度  时间复杂度 对于所有情况，它仅有一个O(nlgn) 空间复杂度O（n）  原址  非原址  js程序代码 bash function insertionSort(array) { console.time(&#39;插入排序耗时：&#39;); for (var i = 1; i &amp;lt; array.length; i++) { var key = array[i]; var j = i - 1; while ( array[j] &amp;gt; key) { array[j + 1] = array[j]; j--; } array[j + 1] = key; } console.timeEnd(&#39;插入排序耗时：&#39;); return array; } var arr=[3,44,38,5,47,15,36,26,27,2,46,4,19,50,48]; console.log(insertionSort(arr));  &amp;ndash;&amp;gt;</description>
    </item>
    
  </channel>
</rss>